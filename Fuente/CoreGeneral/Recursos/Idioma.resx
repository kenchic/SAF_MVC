<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="EtiquetaActivo" xml:space="preserve">
    <value>Activo</value>
    <comment>Label del campo Activo</comment>
  </data>
  <data name="EtiquetaId" xml:space="preserve">
    <value>Id</value>
    <comment>Label del campo Id</comment>
  </data>
  <data name="EtiquetaIdAgente" xml:space="preserve">
    <value>Id Agente</value>
    <comment>Lable del campo Agente en ForenKey</comment>
  </data>
  <data name="EtiquetaidAgenteNombre" xml:space="preserve">
    <value>Agente</value>
    <comment>Lable del campo Agente en ForenKey</comment>
  </data>
  <data name="EtiquetaNombre" xml:space="preserve">
    <value>Nombre</value>
    <comment>Label del campo Nombre</comment>
  </data>
  <data name="MensajeRequerido" xml:space="preserve">
    <value>Campo Requerido</value>
    <comment>Label del mensaje de campo requerido</comment>
  </data>
  <data name="MensajeTamanoMaximo" xml:space="preserve">
    <value>Campo no puede tener más de {0} caracteres.</value>
    <comment>Lable del mensaje de superó el tamaño del campo</comment>
  </data>
  <data name="TituloAgenteListar" xml:space="preserve">
    <value>Agentes</value>
    <comment>Titulo de la vista Listar de la entidad Agente</comment>
  </data>
  <data name="EtiquetaAdmin" xml:space="preserve">
    <value>Administrador</value>
    <comment>Label del Administrador</comment>
  </data>
  <data name="EtiquetaApellido" xml:space="preserve">
    <value>Apellido</value>
    <comment>Label del Apellido</comment>
  </data>
  <data name="EtiquetaClave" xml:space="preserve">
    <value>Clave</value>
    <comment>Label de la Clave del usuario</comment>
  </data>
  <data name="EtiquetaCorreo" xml:space="preserve">
    <value>Correo</value>
    <comment>Label del Correo</comment>
  </data>
  <data name="EtiquetaIdentificacion" xml:space="preserve">
    <value>Identificación</value>
    <comment>Label de la identificación</comment>
  </data>
  <data name="EtiquetaidRol" xml:space="preserve">
    <value>Rol</value>
    <comment>Label del campo Rol en ForenKey</comment>
  </data>
  <data name="EtiquetaUsuario" xml:space="preserve">
    <value>Usuario</value>
    <comment>Label del Usuario</comment>
  </data>
  <data name="TituloUsuarioLogin" xml:space="preserve">
    <value>Usuario Login</value>
    <comment>Titulo de la vista Usuario Login</comment>
  </data>
  <data name="TituloBloqueAgenteInsertar" xml:space="preserve">
    <value>Insertar Agente</value>
    <comment>Titulo del bloque de la vista AgenteInsertar</comment>
  </data>
  <data name="TituloBloqueAgenteConsultar" xml:space="preserve">
    <value>Consultar Agente</value>
    <comment>Titulo de la vista Consultar de la entidad Agente</comment>
  </data>
  <data name="TituloBloqueAgenteModificar" xml:space="preserve">
    <value>Modificar Agente</value>
    <comment>Titulo de la vista Modifcar de la entidad Agente</comment>
  </data>
  <data name="TituloBloqueCiudadConsultar" xml:space="preserve">
    <value>Detalle Ciudad</value>
    <comment>Titulo de la vista </comment>
  </data>
  <data name="TituloBloqueCiudadInsertar" xml:space="preserve">
    <value>Insertar Ciudad</value>
    <comment>Titulo de la vista </comment>
  </data>
  <data name="TituloBloqueCiudadModificar" xml:space="preserve">
    <value>Modificar Ciudad</value>
    <comment>Titulo de la vista Mofiicar de la entidad Ciudad</comment>
  </data>
  <data name="TituloCiudadListar" xml:space="preserve">
    <value>Ciudades</value>
    <comment>Titulo de las ciudades</comment>
  </data>
  <data name="TituloBloqueConductorConsultar" xml:space="preserve">
    <value>Consultar Conductor</value>
    <comment>Titulo de la vista</comment>
  </data>
  <data name="TituloBloqueConductorInsertar" xml:space="preserve">
    <value>Insertar Conductor</value>
    <comment>Titulo de la vista</comment>
  </data>
  <data name="TituloBloqueConductorModificar" xml:space="preserve">
    <value>Modificar Conductor</value>
    <comment>Titulo de la vista</comment>
  </data>
  <data name="TituloConductorListar" xml:space="preserve">
    <value>Conductores</value>
    <comment>Titulo de la vista Listar</comment>
  </data>
  <data name="EtiquetaPlaca" xml:space="preserve">
    <value>Placa</value>
    <comment>Label de la Placa</comment>
  </data>
</root>